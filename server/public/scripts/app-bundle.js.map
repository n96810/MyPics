{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/resources/index.js","src/modules/home.js","src/modules/list.js","src/resources/data/data-services.js","src/resources/data/galleries.js","src/resources/data/pictures.js","src/resources/data/users.js"],"names":["App","message","configureRouter","config","router","addPipelineStep","map","authConfig","debug","testing","configure","window","regeneratorRuntime","Promise","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","auth","loginError","showLogin","login","console","log","email","password","sessionStorage","setItem","JSON","stringify","response","user","navigate","catch","error","showRegister","User","registerError","saveUser","save","serverResponse","List","galleries","pictures","parse","getItem","showGalleryList","addGallery","_id","Date","logout","removeItem","activate","getUserGalleries","openGallery","gallery","galleryObject","getGalleryPictures","pictureList","addPicture","exitGallery","saveGallery","alert","galleryId","deleteGallery","delete","savePicture","pictureId","imageFile","length","uploadImageFile","openPicture","picture","pictureObject","filename","deletePicture","uploadPicture","Array","push","files","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","withInterceptor","request","method","url","authHeader","localStorage","headers","append","status","get","fetch","json","data","post","content","object","put","uploadFiles","Galleries","GALLERY_SERVICE","galleryList","id","i","splice","Pictures","PICTURE_SERVICE","getPicture","currentPicture","formData","FormData","forEach","item","index","Users","USER_SERVICE"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from \"aurelia-auth\";\n\nexport class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep(\"authorize\", AuthorizeStep);\n    config.map([\n      {\n        \"route\": [\"\", \"home\"],\n        \"moduleId\": \"./modules/home\",\n        \"name\": \"Home\"\n      },\n      {\n        \"route\": \"List\",\n        \"moduleId\": \"./modules/list\",\n        \"name\": \"List\",\n        \"auth\": true\n      }\n    ]);\n  }\n}\n","var authConfig = {\r\n    \"baseUrl\": \"http://localhost:80/api\",\r\n    \"loginUrl\": \"/users/login\",\r\n    \"tokenName\": \"token\",\r\n    \"authHeader\": \"Authorization\",\r\n    \"authToken\": \"\",\r\n    \"logoutRedirect\": \"#/home\"\r\n}\r\n\r\nexport default authConfig;","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from \"./auth-config\";\nimport regeneratorRuntime from \"./regenerator-runtime\";\nwindow.regeneratorRuntime = regeneratorRuntime;\n\nPromise.config({ \"warnings\": { \"wForgottenReturn\": false }});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin(\"aurelia-auth\", (baseConfig) => { baseConfig.configure(config); })\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from \"aurelia-framework\";\r\nimport {Router} from \"aurelia-router\";\r\nimport {Users} from \"../resources/data/users\";\r\nimport {AuthService} from \"aurelia-auth\";\r\n\r\n@inject(Router, Users, AuthService)\r\nexport class Home {\r\n    constructor(router, users, auth) {\r\n        this.router = router;\r\n        this.auth = auth;\r\n        this.loginError = \"\";\r\n        this.users = users;\r\n        this.message = \"Home\";\r\n        this.showLogin = true;\r\n    }\r\n\r\n    login() {\r\n        console.log(this.email);\r\n        console.log(this.password);\r\n        return this.auth.login(this.email, this.password)\r\n        .then(response => {\r\n            sessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n            this.loginError = \"\";\r\n            this.router.navigate(\"List\");\r\n        })\r\n        .catch(error => {\r\n            console.log(\"login failed\");\r\n            console.log(error);\r\n            this.loginError = \"Invalid credentials\"\r\n        })\r\n    }\r\n\r\n    showRegister() {\r\n        this.User = {\r\n            \"firstName\": \"\",\r\n            \"lastName\": \"\",\r\n            \"email\": \"\",\r\n            \"password\": \"\"\r\n        };\r\n        this.registerError = \"\";\r\n        this.showLogin = false;\r\n    }\r\n\r\n    async saveUser() {\r\n        let serverResponse = await this.users.save(this.user);\r\n        if (!serverResponse.error) {\r\n            this.showLogin = true;\r\n        } else {\r\n            this.registerError = \"There was a problem registering this user\";\r\n        }\r\n    }\r\n}","import {inject} from \"aurelia-framework\";\r\nimport {Galleries} from \"../resources/data/galleries\";\r\nimport {Pictures} from \"../resources/data/pictures\";\r\nimport {AuthService} from \"aurelia-auth\"\r\n\r\n@inject(Galleries, Pictures, AuthService)\r\nexport class List {\r\n    constructor(galleries, pictures, auth) {\r\n        this.galleries = galleries;\r\n        this.pictures = pictures;\r\n        this.auth = auth;\r\n\r\n        this.user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n        this.showGalleryList = true;\r\n\r\n        this.addGallery = {\r\n            \"userId\": this.user._id,\r\n            \"name\": \"\",\r\n            \"description\": \"\",\r\n            \"dateCreated\": new Date()\r\n        };\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem(\"user\");\r\n        this.auth.logout();\r\n    }\r\n\r\n    async activate() {\r\n        await this.galleries.getUserGalleries(this.user._id);\r\n    }\r\n\r\n    async openGallery(gallery) {\r\n        this.galleryObject = gallery;\r\n        await this.pictures.getGalleryPictures(this.galleryObject._id);\r\n        console.log(this.pictures.pictureList);\r\n        this.addPicture = {\r\n            \"name\": \"\",\r\n            \"description\": \"\",\r\n            \"galleryId\": this.galleryObject._id\r\n        }\r\n        this.showGalleryList = false;\r\n    }\r\n\r\n    async exitGallery() {\r\n        this.showGalleryList = true;\r\n    }\r\n\r\n    async saveGallery() {\r\n        if (this.addGallery) {\r\n            let response = await this.galleries.save(this.addGallery);\r\n            if (response.error) {\r\n                alert(\"There was an issue saving this gallery\");\r\n                console.log(response.error);\r\n            } else {\r\n                var galleryId = response._id;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteGallery(gallery) {\r\n        this.galleries.delete(gallery._id);\r\n    }\r\n\r\n    async savePicture() {\r\n        if (this.addPicture) {\r\n            let response = await this.pictures.save(this.addPicture);\r\n            if (response.error) {\r\n                alert(\"There was an issue saving this picture\");\r\n                console.log(response.error);\r\n            } else {\r\n                var pictureId = response._id;\r\n                console.log(\"response: \" + response);\r\n                console.log(\"id: \" + pictureId);\r\n                if (this.imageFile && this.imageFile.length) {\r\n                    await this.pictures.uploadImageFile(this.imageFile, this.galleryObject._id, pictureId);\r\n                    console.log(\"done save picture\");\r\n                    this.imageFile = [];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async openPicture(picture) {\r\n        console.log(\"picture\");\r\n        console.log(picture);\r\n        console.log(picture.imageFile);\r\n        this.pictureObject = picture;\r\n        console.log(\"Picture source: \" + \"uploads/\" + this.pictureObject.galleryId + \"/\" + this.pictureObject._id + \"/\" + this.pictureObject.imageFile.filename)\r\n    }\r\n\r\n    async deletePicture(picture) {\r\n        this.pictures.delete(picture._id);\r\n    }\r\n\r\n    async uploadPicture() {\r\n        this.imageFile = new Array();\r\n        this.imageFile.push(this.files[0]);\r\n    }\r\n}","import {inject} from \"aurelia-framework\"\r\nimport {HttpClient, json} from \"aurelia-fetch-client\"\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n    constructor(http) {\r\n        this.httpClient = http;\r\n        this.BASE_URL = \"http://localhost:80/api/\";\r\n\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                    \"credentials\": \"same-origin\",\r\n                    \"headers\": {\r\n                        \"Accept\": \"application/json\",\r\n                        \"X-Requested-With\": \"Fetch\"\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        console.log(`Requesting ${request.method} ${request.url}`);\r\n                        var authHeader = \"Bearer \" + localStorage.getItem(\"aurelia_token\");\r\n                        request.headers.append(\"Authorization\", authHeader);\r\n                        return request;\r\n                    },\r\n                    response(response) {\r\n                        console.log(`Received ${response.status} ${response.url}`);\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    get(url) {\r\n        return this.httpClient.fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                return data;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    post(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                \"method\": \"post\",\r\n                \"body\": json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    put(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                \"method\": \"put\",\r\n                \"body\": json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    delete(url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                \"method\": \"delete\"\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    uploadFiles(files, url) {\r\n        return  this.httpClient\r\n        .fetch(url, {\r\n            \"method\": \"post\",\r\n            \"body\": files\r\n        })\r\n        .then(response => response.json())\r\n        .then(object => {\r\n            return object;\r\n        })\r\n        .catch(error => {\r\n            return error;\r\n        });\r\n    }\r\n}","import {inject} from \"aurelia-framework\";\r\nimport {DataServices} from \"./data-services\";\r\n\r\n@inject(DataServices)\r\nexport class Galleries {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.GALLERY_SERVICE = \"galleries\";\r\n        this.galleryList = [];\r\n    }\r\n\r\n    async getUserGalleries(id) {\r\n        let response = await this.data.get(id + \"/\" + this.GALLERY_SERVICE);\r\n        if (!response.error && !response.message) {\r\n            this.galleryList = response;\r\n        }\r\n    }\r\n\r\n    async save(gallery) {\r\n        if (gallery)\r\n        {\r\n            if (!gallery._id) {\r\n                let response = await this.data.post(gallery, this.GALLERY_SERVICE);\r\n                if (!response.error) {\r\n                    console.log(\"adding to array\");\r\n                    this.galleryList.push(response);\r\n                    console.log(this.galleryList);\r\n                    console.log(response);\r\n                }\r\n                return response;\r\n            } else {\r\n                let response = await this.data.put(gallery, this.GALLERY_SERVICE + \"/\" + gallery._id);\r\n                if (!response.error) {\r\n                }\r\n                return response;\r\n            }\r\n        }\r\n    }\r\n    \r\n    async delete(id) {\r\n        let response = await this.data.delete(this.GALLERY_SERVICE + \"/\" + id);\r\n        if (!response.error) {\r\n            for (let i = 0; i < this.galleryList.length; i++) {\r\n                if (this.galleryList[i]._id == id) {\r\n                    this.galleryList.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import {inject} from \"aurelia-framework\";\r\nimport {DataServices} from \"./data-services\";\r\nimport {Galleries} from \"./galleries\";\r\n\r\n@inject(DataServices, Galleries)\r\nexport class Pictures {\r\n    constructor(data, galleries) {\r\n        this.data = data;\r\n        this.galleries = galleries;\r\n        this.PICTURE_SERVICE = \"pictures\"\r\n        this.pictureList = [];\r\n    }\r\n\r\n    async getGalleryPictures(id) {\r\n        console.log(\"route: \" + this.galleries.GALLERY_SERVICE + \"/\" + id + \"/\" + this.PICTURE_SERVICE);\r\n        let response = await this.data.get(this.galleries.GALLERY_SERVICE + \"/\" + id + \"/\" + this.PICTURE_SERVICE);\r\n        if (!response.error && !response.message) {\r\n            this.pictureList = response;\r\n        }\r\n    }\r\n    \r\n    async getPicture(id) {\r\n        let response = await this.data.get(Galleries.GALLERY_SERVICE + \"/\" + data.galleryId + \"/\" + this.PICTURE_SERVICE + \"/\" + id);\r\n        if (!response.error && !response.message) {\r\n            this.currentPicture = response;\r\n        }\r\n    }\r\n\r\n    async save(picture) {\r\n        if (!picture._id) {\r\n            let response = await this.data.post(picture, this.PICTURE_SERVICE)\r\n            if (!response.error) {\r\n                this.pictureList.push(response);\r\n            }\r\n            return response;\r\n        } else {\r\n            let response = await this.data.put(picture, this.PICTURE_SERVICE + \"/\" + picture);\r\n            if (!response.error) {\r\n            }\r\n            return response;\r\n        }\r\n    }\r\n    \r\n    async delete(id) {\r\n        let response = await this.data.delete(this.galleries.GALLERY_SERVICE + \"/\" + this.data.galleryId + \"/\" + this.PICTURE_SERVICE + \"/\" + id);\r\n        if (!response.error) {\r\n            for (let i = 0; i < this.pictureList.length; i++) {\r\n                if (this.pictureList[i]._id == id) {\r\n                    this.pictureList.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async uploadImageFile(files, galleryId, pictureId) {\r\n        let formData = new FormData();\r\n\r\n        console.log(\"looking at file\");\r\n        files.forEach((item, index) => {\r\n            formData.append(\"file\" + index, item);\r\n        });\r\n\r\n        console.log(this.PICTURE_SERVICE + \"/\" + galleryId + \"/\" + pictureId + \"/files\");\r\n        let response = await this.data.uploadFiles(formData, this.PICTURE_SERVICE + \"/\" + galleryId + \"/\" + pictureId + \"/files\");\r\n    }\r\n}","import {inject} from \"aurelia-framework\";\r\nimport {DataServices} from \"./data-services\";\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = \"users\";\r\n    }\r\n\r\n    async save(user) {\r\n        if (user) {\r\n            let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n            return serverResponse;\r\n        }\r\n    }\r\n}"],"sourceRoot":".."}